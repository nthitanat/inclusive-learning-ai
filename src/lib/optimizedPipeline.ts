import { ChatOpenAI } from "@langchain/openai";
import { createStuffDocumentsChain } from "langchain/chains/combine_documents";
import { docsQuery } from "@/lib/docsQuery";
import { getSubjectCSVPath } from "@/utils/subjectMapping";
import { prompts } from "@/lib/promptTemplates";
import { RunnableSequence, RunnableParallel, RunnablePassthrough } from "@langchain/core/runnables";
import { StringOutputParser } from "@langchain/core/output_parsers";
import { ChatPromptTemplate } from "@langchain/core/prompts";
import { extractJSON } from "@/utils/extractJSON";
import { searchAgent, SearchAgent } from "@/lib/searchAgent";

const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

// Initialize the LLM once
const chatModel = new ChatOpenAI({
  model: "gpt-4o",
  temperature: 0.5,
  openAIApiKey: OPENAI_API_KEY,
});

// Utility functions
const parseJSON = async (input: string) => {
  try {
    return await extractJSON(input);
  } catch (error) {
    console.error("JSON parsing error:", error);
    throw new Error("Failed to parse JSON response");
  }
};

// Create optimized pipeline chains
export class OptimizedLessonPipeline {
  private vectorStore: any = null;

  async initialize(subject: string) {
    const csvPath = getSubjectCSVPath(subject);
    this.vectorStore = await docsQuery(csvPath);
    return this;
  }

  // Step 0: Curriculum Analysis with parallel content generation
  async step0(subject: string, lessonTopic: string, level: string) {
    console.log(`üöÄ Starting optimized Step 0 for ${subject} - ${lessonTopic}`);

    // Curriculum retrieval and analysis
    const curriculumChain = RunnableSequence.from([
      RunnablePassthrough.assign({
        context: async () => {
          const searchQuery = `‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞: ${subject} ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á: ${lessonTopic} ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: ${level}`;
          return await this.vectorStore.similaritySearch(searchQuery, 10);
        }
      }),
      prompts.curriculum,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    // Get curriculum data first
    const curriculumData = await curriculumChain.invoke({
      subject,
      lessonTopic,
      level
    });

    // Check for "‡πÑ‡∏°‡πà‡∏û‡∏ö" error
    if (typeof curriculumData === "string" && curriculumData.includes("‡πÑ‡∏°‡πà‡∏û‡∏ö")) {
      throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
    }

    // Generate content and summary in parallel
    const contentChain = RunnableSequence.from([
      prompts.contentAndSummary,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    const contentData = await contentChain.invoke({
      standard: curriculumData["‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô"],
      interimIndicators: curriculumData["‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á"],
      finalIndicators: curriculumData["‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á"]
    });

    return {
      ...curriculumData,
      ...contentData
    };
  }

  // Step 1: Objectives generation
  async step1(sessionData: any) {
    console.log("üöÄ Starting optimized Step 1 - Objectives");

    const objectivesChain = RunnableSequence.from([
      prompts.objectives,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    const objectives = await objectivesChain.invoke({
      subject: sessionData.subject,
      content: JSON.stringify(sessionData.content),
      level: sessionData.level,
      interimIndicators: JSON.stringify(sessionData.interimIndicators),
      finalIndicators: JSON.stringify(sessionData.finalIndicators)
    });

    const keyCompetencies = {
      "5.1": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£",
      "5.2": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î",
      "5.3": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
      "5.4": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï",
    };

    return {
      "‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ": objectives,
      "‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô": keyCompetencies,
    };
  }

  // Step 2: Enhanced Lesson Plan and Materials with Internet Search and Reasoning
  async step2Agent(sessionData: any, numStudents: number = 30, studentType: any[] = [], studyPeriod: number = 9) {
    console.log("üöÄ Starting enhanced Step 2 Agent - Lesson Plan with Internet Search & Reasoning");

    const studentTypesStr = studentType.length > 0
      ? studentType.map((s: any, idx: number) => `‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà ${idx + 1}: ${s.type} (${s.percentage}%)`).join(", ")
      : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô";

    const totalMinutes = 50 * studyPeriod;

    // Step 2.1: Perform enhanced search and reasoning
    console.log("üîç Step 2.1: Gathering enhanced data from internet search and reasoning...");
    let enhancedData;
    
    try {
      enhancedData = await searchAgent.performEnhancedSearch(
        sessionData.subject,
        sessionData.lessonTopic,
        sessionData.level,
        studentType
      );
      console.log("‚úÖ Enhanced data gathered successfully");
    } catch (error) {
      console.warn("‚ö†Ô∏è Search API not working, using fallback reasoning:", error);
      // Fallback to reasoning-only approach
      enhancedData = {
        teachingProcessExamples: [
          "5E Model: Engage ‚Üí Explore ‚Üí Explain ‚Üí Elaborate ‚Üí Evaluate",
          "Problem-Based Learning: ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á",
          "Active Learning: ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∏‡∏Å‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢"
        ],
        lessonDetails: `‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤${sessionData.subject} ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á${sessionData.lessonTopic} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö${sessionData.level}`,
        udlStrategies: [
          "Multiple Means of Representation: ‡πÉ‡∏ä‡πâ‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢",
          "Multiple Means of Engagement: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏à‡∏π‡∏á‡πÉ‡∏à‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö",
          "Multiple Means of Action/Expression: ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å"
        ],
        inclusiveStrategies: [
          "Differentiated Instruction: ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á",
          "Collaborative Learning: ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠",
          "Flexible Assessment: ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô"
        ]
      };
    }

    // Step 2.2: Create enhanced prompt with gathered data
    const enhancedPrompt = ChatPromptTemplate.fromMessages([
      ["system", "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ UDL ‡πÅ‡∏•‡∏∞ Inclusive Education ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤ ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"],
      ["human", `‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö UDL ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á (Inclusive Classroom)

**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô:**
- ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: {content}
- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô: ({studyPeriod} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: {numStudents} ‡∏Ñ‡∏ô
- ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: {studentTypes}

**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤:**
1. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô:
{teachingProcessExamples}

2. ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:
{lessonDetails}

3. ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå UDL ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°:
{udlStrategies}

4. ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå Inclusive Classroom:
{inclusiveStrategies}

**‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö:**
- ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
- ‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏°‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏ú‡∏™‡∏°‡∏ú‡∏™‡∏≤‡∏ô‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå UDL ‡πÅ‡∏•‡∏∞ Inclusive ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
- **‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ** ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û/‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå ‡πÄ‡∏ß‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏à‡∏£‡∏¥‡∏á
- **‡∏ó‡∏∏‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏≤‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î** ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡∏ï‡∏≤‡∏° Bloom's Taxonomy

**‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°:**
- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤, ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ, ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
- ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö {totalMinutes} ‡∏ô‡∏≤‡∏ó‡∏µ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô

**‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö NESTED ‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô:**
{{
  "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ": {{
            "8.1 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 1 (X ‡∏ô‡∏≤‡∏ó‡∏µ)": {{
                    "1 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà1 (X ‡∏ô‡∏≤‡∏ó‡∏µ)" : {{
                             ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£,
                             ‡∏™‡∏∑‡πà‡∏≠/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏π,
                             ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢: {{
                                "1 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà1": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
                                "2 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà2": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
                            }}
                            
                    }}
                    "2 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà2 (X ‡∏ô‡∏≤‡∏ó‡∏µ)" : {{
                             ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£,
                             ‡∏™‡∏∑‡πà‡∏≠/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏π,
                             ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢: {{
                                "1 ‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà1": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
                                "2 ‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà2": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
                            }}
                    }}
            }},
            "8.2 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 2 (X ‡∏ô‡∏≤‡∏ó‡∏µ)": {{
                    "1 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà1 (X ‡∏ô‡∏≤‡∏ó‡∏µ)" : {{
                             ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£,
                             ‡∏™‡∏∑‡πà‡∏≠/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏π,
                             ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢: {{
                                "1 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà1": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
                                "2 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà2": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
                            }}
                            
                    }}
                    "2 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà2 (X ‡∏ô‡∏≤‡∏ó‡∏µ)" : {{
                             ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£,
                             ‡∏™‡∏∑‡πà‡∏≠/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô,
                             ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏π,
                             ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢: {{
                                "1 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà1": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
                                "2 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà2": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
                            }}
                    }}
            }},
            "8.3 ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà 3 (X ‡∏ô‡∏≤‡∏ó‡∏µ)": [...],
             ...,
            "8.x ... : [...]
  }},
  "‡∏™‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå": {{
    "1": "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
    "2": "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÅ‡∏•‡∏∞‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ",
    "3": "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå"
  }},
  "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤": {{
    "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏°‡∏≤‡πÉ‡∏ä‡πâ": "‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏´‡∏ô‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
    "‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå UDL ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ": "‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå UDL ‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏°‡∏≤‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå",
    "‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå Inclusive ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ": "‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå Inclusive ‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏°‡∏≤‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå"
  }}
}}

‡πÉ‡∏´‡πâ‡∏Ñ‡∏¥‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö! ‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö`]
    ]);

    // Step 2.3: Generate enhanced lesson plan
    console.log("üéØ Step 2.3: Generating enhanced lesson plan...");
    
    const enhancedChain = RunnableSequence.from([
      enhancedPrompt,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    const result = await enhancedChain.invoke({
      content: JSON.stringify(sessionData.content),
      studyPeriod,
      totalMinutes,
      numStudents,
      studentTypes: studentTypesStr,
      teachingProcessExamples: enhancedData.teachingProcessExamples.join(", "),
      lessonDetails: enhancedData.lessonDetails,
      udlStrategies: enhancedData.udlStrategies.join(", "),
      inclusiveStrategies: enhancedData.inclusiveStrategies.join(", ")
    });

    console.log("‚úÖ Enhanced lesson plan generated successfully");

    return {
      response: result["‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ"],
      teachingMaterials: result["‡∏™‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"],
      enhancedData: result["‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤"] || enhancedData,
      searchMetadata: {
        searchPerformed: true,
        enhancedProcesses: enhancedData.teachingProcessExamples,
        udlStrategies: enhancedData.udlStrategies,
        inclusiveStrategies: enhancedData.inclusiveStrategies
      }
    };
  }

  // Step 2: Original Lesson Plan and Materials (kept for backward compatibility)
  async step2(sessionData: any, numStudents: number = 30, studentType: any[] = [], studyPeriod: number = 9) {
    console.log("üöÄ Starting optimized Step 2 - Lesson Plan & Materials");

    const studentTypesStr = studentType.length > 0
      ? studentType.map((s: any, idx: number) => `‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà ${idx + 1}: ${s.type} (${s.percentage}%)`).join(", ")
      : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô";

    const totalMinutes = 50 * studyPeriod;

    const lessonChain = RunnableSequence.from([
      prompts.lessonPlanAndMaterials,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    const result = await lessonChain.invoke({
      content: JSON.stringify(sessionData.content),
      studyPeriod,
      totalMinutes,
      numStudents,
      studentTypes: studentTypesStr
    });

    return {
      response: result["‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ"],
      teachingMaterials: result["‡∏™‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"]
    };
  }

  // Step 3: Evaluation
  async step3(sessionData: any) {
    console.log("üöÄ Starting optimized Step 3 - Evaluation");

    const evaluationChain = RunnableSequence.from([
      prompts.evaluation,
      chatModel,
      new StringOutputParser(),
      parseJSON
    ]);

    const evaluation = await evaluationChain.invoke({
      lessonPlan: JSON.stringify(sessionData.lessonPlan),
      interimIndicators: JSON.stringify(sessionData.interimIndicators)
    });

    return evaluation;
  }

  // Advanced: Run multiple steps in parallel where possible
  async runParallelSteps(sessionData: any, step1Input: any, step2Input: any) {
    console.log("üöÄ Running Steps 1-2 in parallel");

    const parallelChain = RunnableParallel.from({
      objectives: async () => this.step1(sessionData),
      lessonPlan: async () => this.step2(sessionData, step2Input.numStudents, step2Input.studentType, step2Input.studyPeriod)
    });

    return await parallelChain.invoke({});
  }

  // Batch processing for multiple sessions
  async batchProcess(sessions: Array<{subject: string, lessonTopic: string, level: string}>) {
    console.log(`üöÄ Batch processing ${sessions.length} sessions`);

    const batchChain = RunnableParallel.from(
      sessions.reduce((acc, session, index) => {
        acc[`session_${index}`] = async () => {
          await this.initialize(session.subject);
          return this.step0(session.subject, session.lessonTopic, session.level);
        };
        return acc;
      }, {} as any)
    );

    return await batchChain.invoke({});
  }
}

// Error handling wrapper
export const createResilientPipeline = () => {
  const pipeline = new OptimizedLessonPipeline();
  
  const withRetry = async <T>(fn: () => Promise<T>, retries = 3): Promise<T> => {
    for (let i = 0; i < retries; i++) {
      try {
        return await fn();
      } catch (error) {
        console.warn(`Attempt ${i + 1} failed:`, error);
        if (i === retries - 1) throw error;
        await new Promise(resolve => setTimeout(resolve, Math.pow(2, i) * 1000));
      }
    }
    throw new Error("All retries exhausted");
  };

  return {
    ...pipeline,
    step0: (subject: string, lessonTopic: string, level: string) => 
      withRetry(() => pipeline.step0(subject, lessonTopic, level)),
    step1: (sessionData: any) => 
      withRetry(() => pipeline.step1(sessionData)),
    step2: (sessionData: any, numStudents?: number, studentType?: any[], studyPeriod?: number) => 
      withRetry(() => pipeline.step2(sessionData, numStudents, studentType, studyPeriod)),
    step2Agent: (sessionData: any, numStudents?: number, studentType?: any[], studyPeriod?: number) => 
      withRetry(() => pipeline.step2Agent(sessionData, numStudents, studentType, studyPeriod)),
    step3: (sessionData: any) => 
      withRetry(() => pipeline.step3(sessionData))
  };
};

// Performance monitoring
export const monitoredPipeline = (pipeline: OptimizedLessonPipeline) => {
  const monitor = <T>(stepName: string, fn: (...args: any[]) => Promise<T>) => {
    return async (...args: any[]): Promise<T> => {
      const startTime = Date.now();
      try {
        const result = await fn(...args);
        console.log(`‚úÖ ${stepName} completed in ${Date.now() - startTime}ms`);
        return result;
      } catch (error) {
        console.error(`‚ùå ${stepName} failed after ${Date.now() - startTime}ms:`, error);
        throw error;
      }
    };
  };

  return {
    ...pipeline,
    step0: monitor("Step 0", pipeline.step0.bind(pipeline)),
    step1: monitor("Step 1", pipeline.step1.bind(pipeline)),
    step2: monitor("Step 2", pipeline.step2.bind(pipeline)),
    step2Agent: monitor("Step 2 Agent", pipeline.step2Agent.bind(pipeline)),
    step3: monitor("Step 3", pipeline.step3.bind(pipeline))
  };
};
